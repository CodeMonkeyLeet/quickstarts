# ------------------------------------------------------------
# Copyright (c) Microsoft Corporation and Dapr Contributors.
# Licensed under the MIT License.
# ------------------------------------------------------------
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Auto Validate Quickstarts with devcontainer

on:
  push:
    branches:
      - master
      - release-*
    tags:
      - v*
  pull_request:
    branches:
      - master
      - release-*
  workflow_dispatch:
jobs:
  test_devcontainer:
    name: Validate ${{ matrix.quickstart }}/README.md on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      DAPR_CLI_VERSION: 1.6.0-rc.1
DAPR_RUNTIME_VERSION: 1.6.0-rc.3
      DOCKER_WAIT_LIMIT: 30
    strategy:
      matrix:
        quickstart: [hello-world, hello-kubernetes, distributed-calculator, pub-sub, bindings, secretstore, observability, .]
        os: [ubuntu-latest]
    defaults:
      run:
        working-directory: ./.devcontainer
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Start Dev Container
        run: |
          docker-compose build --build-arg DAPR_CLI_VERSION=${{ env.DAPR_CLI_VERSION }} quickstarts
          docker-compose up -d quickstarts
      - name: Start minikube cluster
        if: matrix.quickstart != '.' && matrix.quickstart != 'hello-world'
        run: >
          docker-compose exec -T quickstarts bash -c '
            wait_count=${{ env.DOCKER_WAIT_LIMIT }};
            while (! docker stats --no-stream &> /dev/null && (($wait_count > 0)));
              do echo "Waiting for docker service ... $wait_count";
              sleep 1;
              wait_count=$(( $wait_count - 1 ));
            done;
            minikube start'
      - name: Install Dapr
        run: >
          docker-compose exec -T quickstarts bash -c '
            dapr init --runtime-version=${{ env.DAPR_RUNTIME_VERSION }};
            dapr --version'
      - name: Install Dapr - Kubernetes
        if: matrix.quickstart != '.' && matrix.quickstart != 'hello-world'
        run: >
          docker-compose exec -T quickstarts bash -c '
            helm repo add bitnami https://charts.bitnami.com/bitnami;
            helm repo update;
            helm install redis bitnami/redis;
            dapr init -k --runtime-version=${{ env.DAPR_RUNTIME_VERSION }} --wait'
      # The GitHub runner UID is 1001 and not 1000 as expected for the non-root codespace user
      # in the base image, so it needs to chown the mounted code volume and restore it on cleanup.
      #
      # The devcontainer relies on /etc/bash.bashrc to path some folders like ~/.local/bin, but
      # the script is elided in non-interactive sessions like docker pseudo-tty, so we mock the
      # $PS1 variable and `source` bash.bashrc explicitly before running `make` methods.
      - name: Validate ${{ matrix.quickstart }}
        run: >
          docker-compose exec -T -w /workspace/${{ matrix.quickstart }} quickstarts bash -c '
            sudo chown -R codespace /workspace;
            export PS1="A [u@h W]$ ";
            source /etc/bash.bashrc;
            make validate'
      - name: Cleanup Dev Container
        if: always()
        run: |
          docker-compose down -v
          sudo chown -R runner ..
